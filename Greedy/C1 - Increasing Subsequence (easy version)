Codeforces Round #555 (Div. 3), problem: (C1) Increasing Subsequence (easy version)
Code--
#include <bits/stdc++.h>
using namespace std;
/*   
  freeopen("input.txt","r", stdin);
  freeopen("output.txt","w", stdout);
*/ 
typedef long long ll;
typedef long long int lli;
typedef long double ld;
typedef complex<ld> cd;
typedef pair<ll, ll> pi;
typedef pair<ll,ll> pl;
typedef pair<ld,ld> pd;
typedef vector<ll> vi;
typedef vector<ld> vd;
typedef vector<ll> vl;
typedef vector<pi> vpi;
typedef vector<pl> vpl;
typedef vector<cd> vcd;
#define debug(x) cout<<#x<<" "<<x<<endl; 
#define FOR(i, a, b) for (ll i=a; i<(b); i++)
#define FORI(i, a, b) for (ll i=a; i<=(b); i++)
#define FORR(i,a,b) for (ll i = (b)-1; i >= a; i--)
#define opp greater<ll>()
#define sz(x) (ll)(x).size()
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define lb lower_bound
#define ub upper_bound
#define ins insert
#define all(x) x.begin(), x.end()
#define rev(x) reverse(all(x))
#define IOS ios::sync_with_stdio(0); cin.tie(0);cout.tie(0);
#define umapii unordered_map<ll,ll>
#define umapsi unordered_map<string,ll>
#define umapci unordered_map<char,ll>
#define fix(x) setprecision(x)
#define MEMS(x,t) memset(x,t,sizeof(x));
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

 
const int mod = 1e9+7;
const ll maxe= 1e9;
const char nl = '\n';
 auto sgn = [&](ll x) { //check the sign of the number.
	if(x>0){
	return 1;}
	else{return -1;}
}; 
bool sortbysec(const pair<int,int> &a,const pair<int,int> &b){
    return (a.second < b.second);
}

bool isPrime(int n){ //prime check
    if (n <= 1)
        return false;
  
    // Check from 2 to n-1
    for (int i = 2; i < n; i++)
        if (n % i == 0)
            return false;
  
    return true;
}
/*
SIGMA RULE-
DON'T CHECK SOLUTION UNTIL
WHEN YOU HAVE INVESTED MORE THAN 
2 HOURS ON A QUESTION.
*/
void solve(){ 

  ll n;
  cin>>n;
  ll a[n];
  FOR(i,0,n){
  	cin>>a[i];
  }
  //a[st-1]= -1;
  ll st = 0,en = n-1;

  vector<char>v;
  ll check = -1;
  while(st<=en){
  	
  	if(a[st]<check and a[en]<check){
  		break;
	  }
  	
  	if(a[st]<a[en]){
  	 	if(a[st]>check){
  	 		check = a[st];
  	 		st++; v.pb('L');
  	 		
		   }
		   else{
		   		check= a[en];
		   	en--; v.pb('R');
		   
		   }
	   }
	
	else{
  	 	if(a[en]>check){
  	 		check = a[en];
  	 		en--; v.pb('R');
  	 		
		   }
		   else{
		   	check= a[st];
		   	st++; v.pb('L');
		   	
		   }
	   }
	   
  }
  
  
  
  cout<<v.size()<<nl;
  for(auto i:v){
  	cout<<i;
  }
  
    
    
}

	 	  
int main() {
    IOS;
    ll t=1;
    //cin >> t;
    while(t--) {
    	 //cout << "Case #" << T << ": ";  
        solve();
    }

	return 0;
}

