#include <bits/stdc++.h>
using namespace std;
 
typedef long long ll;
typedef long double ld;
typedef complex<ld> cd;
 
typedef pair<int, int> pi;
typedef pair<ll,ll> pl;
typedef pair<ld,ld> pd;
 
typedef vector<int> vi;
typedef vector<ld> vd;
typedef vector<ll> vl;
typedef vector<pi> vpi;
typedef vector<pl> vpl;
typedef vector<cd> vcd;
 
#define FOR(i, a, b) for (int i=a; i<(b); i++)
#define F0R(i, a) for (int i=0; i<(a); i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)
#define trav(a,x) for (auto& a : x)
#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)
 
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define lb lower_bound
#define ub upper_bound
#define all(x) x.begin(), x.end()
#define ins insert
void pr(int x) {cout << x;}
void prl(int x) {cout << x << endl;}

 
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
 
const int MOD = 1000000007;
const char nl = '\n';
const int MX = 100001; //check the limits, dummy
const int N= 1e5+2;
int gcd(int a,int b){return __gcd(a,b);}  //gcd function;
  
  
void solve() {
 
  
    ll n;
    cin>>n;
    ll a[n+5];
    FOR(i,1,n+1)cin>>a[i];
    ll ind=1;
    FOR(i,1,n+1){
        if(a[i]<a[ind])ind=i;
    }
    cout<<(n-1)<<nl;
    FOR(i,1,n+1){
        if(i==ind)continue;
        ll cur=a[ind];
        if(abs(i-ind)%2)cur++;
        cout<<i<<" "<<ind<<" "<<cur<<" "<<a[ind]<<endl;
    }
 
 
}
 
int main() {
	ios_base::sync_with_stdio(0); cin.tie(0);    

    ll T;
    cin >> T;
    while(T--) {
        solve();
    }

	return 0;
}
Â 
